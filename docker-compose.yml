version: '3'
services:
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "nc", "-z", "rabbitmq", "5672"]
      interval: 10s
      retries: 10

  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: chat_system
      MYSQL_TEST_DATABASE: testdb
    volumes:
      - db_data:/var/lib/mysql

  redis:
    image: redis

  web:
    build:
      context: .
      dockerfile: Dockerfile.rails
    command: bash -c "rm -f tmp/pids/server.pid && ./wait-for-rabbitmq.sh rabbitmq 5672 && bundle exec rails s -b '0.0.0.0'"
    volumes:
      - ".:/app"
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
      - rabbitmq
      - elasticsearch
    environment:
      MYSQL_DATABASE: chat_system
      RAILS_MAX_THREADS: 5

  sneakers:
    build:
      context: .
      dockerfile: Dockerfile.rails
    command: ./wait-for-rabbitmq.sh rabbitmq 5672 bundle exec sneakers work CreateChatWorker,CreateMessageWorker --require ./config/environment.rb
    volumes:
      - ".:/app"
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      MYSQL_DATABASE: chat_system
      REDIS_URL: redis://redis:6379/0

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

volumes:
  db_data:
  es_data:
